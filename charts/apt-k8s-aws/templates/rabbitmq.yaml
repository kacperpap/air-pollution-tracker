apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apt.name" . }}-{{ .Values.rabbitmq.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      apt.kubernetes.io/tier: {{ include "apt.name" . }}-{{ .Values.rabbitmq.name }}
      apt.kubernetes.io/version: {{ include "apt.version" . }}
  template:
    metadata:
      labels:
        apt.kubernetes.io/tier: {{ include "apt.name" . }}-{{ .Values.rabbitmq.name }}
        apt.kubernetes.io/version: {{ include "apt.version" . }}
    spec:
      nodeSelector:
        deployment: {{ .Values.eks.cluster.nodeGroup }}
      containers:
        - name: {{ .Values.rabbitmq.name }}
          image: "{{ .Values.rabbitmq.image.repository }}:{{ .Values.rabbitmq.image.tag }}"
          imagePullPolicy: {{ .Values.rabbitmq.image.pullPolicy }}
          resources:
            requests:
              memory: {{ .Values.rabbitmq.resources.requests.memory }}
              cpu: {{ .Values.rabbitmq.resources.requests.cpu }}
            limits:
              memory: {{ .Values.rabbitmq.resources.limits.memory }}
              cpu: {{ .Values.rabbitmq.resources.limits.cpu }}
          env:
            - name: RABBITMQ_DEFAULT_USER
              value: {{ .Values.rabbitmq.config.RABBITMQ_DEFAULT_USER }}
            - name: RABBITMQ_DEFAULT_PASS
              value: {{ .Values.rabbitmq.config.RABBITMQ_DEFAULT_PASS }}
          envFrom:
            - configMapRef:
                name: {{ include "apt.name" . }}-config
          ports:
            - containerPort: {{ .Values.rabbitmq.container.targetPorts.amqp }}
              name: amqp
            - containerPort: {{ .Values.rabbitmq.container.targetPorts.management }}
              name: management
          readinessProbe:
            exec:
              command: ["rabbitmq-diagnostics", "check_port_connectivity"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          
