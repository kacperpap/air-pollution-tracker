apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apt.fullname" . }}-{{ .Values.backend.name }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      apt.kubernetes.io/tier: {{ include "apt.name" . }}-{{ .Values.backend.name }}
      apt.kubernetes.io/version: {{ include "apt.version" . }}
  template:
    metadata:
      labels:
        apt.kubernetes.io/tier: {{ include "apt.name" . }}-{{ .Values.backend.name }}
        apt.kubernetes.io/version: {{ include "apt.version" . }}
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apt.kubernetes.io/tier: {{ include "apt.name" . }}-{{ .Values.rabbitmq.name }}
                  apt.kubernetes.io/version: {{ include "apt.version" . }}
              topologyKey: "kubernetes.io/hostname"
      # initContainers:
      #   - name: wait-for-rabbitmq
      #     image: busybox
      #     command:
      #       - sh
      #       - -c
      #       - |
      #         echo "Full RabbitMQ service name: {{ include "apt.fullname" . }}-{{ .Values.rabbitmq.name }}"
      #         echo "AMQP port: {{ .Values.rabbitmq.service.ports.amqp }}"
      #         echo "Management port: {{ .Values.rabbitmq.container.targetPorts.management }}"
              
      #         echo "Checking service connectivity..."
      #         until nc -z -w1 {{ include "apt.fullname" . }}-{{ .Values.rabbitmq.name }} {{ .Values.rabbitmq.service.ports.amqp }}; do
      #           echo "Waiting for RabbitMQ service to be reachable..."
      #           sleep 2
      #         done
      #         echo "SERVICE CONNECTIVITY CHECK PASSED"
      containers:
        - name: {{ .Values.backend.name }}
          image: "{{ .Values.backend.image.repository }}/{{ .Values.backend.name }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          resources:
            requests:
              memory: {{ .Values.backend.resources.requests.memory }}
              cpu: {{ .Values.backend.resources.requests.cpu }}
            limits:
              memory: {{ .Values.backend.resources.limits.memory }}
              cpu: {{ .Values.backend.resources.limits.cpu }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "apt.fullname" . }}-secrets
                  key: DATABASE_URL
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "apt.fullname" . }}-secrets
                  key: JWT_KEY
          envFrom:
            - configMapRef:
                name: {{ include "apt.fullname" . }}-config
          ports:
            - containerPort: {{ .Values.backend.container.targetPort }}
