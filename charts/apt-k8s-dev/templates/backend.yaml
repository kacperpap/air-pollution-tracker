apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "apt.fullname" . }}-{{ .Values.backend.name }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      apt.kubernetes.io/tier: {{ include "apt.name" . }}-{{ .Values.backend.name }}
      apt.kubernetes.io/version: {{ include "apt.version" . }}
  template:
    metadata:
      labels:
        apt.kubernetes.io/tier: {{ include "apt.name" . }}-{{ .Values.backend.name }}
        apt.kubernetes.io/version: {{ include "apt.version" . }}
    spec:
      # initContainers:
      # - name: wait-for-rabbitmq
      #   image: busybox
      #   command:
      #     - sh
      #     - -c
      #     - |
      #       command="nc -z -w1 {{ include "apt.fullname" . }}-{{ .Values.rabbitmq.name }} {{ .Values.rabbitmq.service.ports.amqp }}"
      #       echo "Executing command: $command"
            
      #       while true; do
      #         output=$($command 2>&1)
      #         exit_code=$?

      #         echo "Command output: $output"
      #         echo "Command exit code: $exit_code"

      #         if [ $exit_code -eq 0 ]; then
      #           echo "RabbitMQ is reachable."
      #           break
      #         fi

      #         echo "Waiting for RabbitMQ to be available..."
      #         sleep 2
      #       done

      # initContainers:
      # - name: wait-for-rabbitmq
      #   image: busybox
      #   command:
      #     - sh
      #     - -c
          # - >
          #   until nslookup {{ include "apt.fullname" . }}-{{ .Values.rabbitmq.name }};
          #   do echo "waiting for rabbitmq to start";
          #   sleep 2;
          #   done;
          # - >
          #   until wget --spider -q http://{{ include "apt.fullname" . }}-{{ .Values.rabbitmq.name }}:{{ .Values.rabbitmq.container.targetPorts.management }}/api/health;
          #   do echo "waiting for rabbitmq to start";
          #   sleep 2;
          #   done;
      containers:
        - name: {{ .Values.backend.name }}
          image: "{{ .Values.backend.image.repository }}/{{ .Values.backend.name }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "apt.fullname" . }}-secrets
                  key: DATABASE_URL
            - name: JWT_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "apt.fullname" . }}-secrets
                  key: JWT_KEY
          envFrom:
            - configMapRef:
                name: {{ include "apt.fullname" . }}-config
          ports:
            - containerPort: {{ .Values.backend.container.targetPort }}
