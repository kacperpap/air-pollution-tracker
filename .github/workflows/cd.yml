name: Terraform CD Pipeline

on:
    workflow_dispatch:
      inputs:
        environment:
          description: 'Environment to deploy (dev or prod)'
          required: true
          default: 'prod'

env:
  PROJECT_NAME: ${{ vars.PROJECT_NAME }}
  CLUSTER_NAME: ${{ vars.CLUSTER_NAME }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  ENVIRONMENT: ${{ github.event.inputs.environment }}


jobs:
  terraform:
    name: Provision of VPC, EKS and ALB  
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      working-directory: ./infrastructure
      run: terraform init

    - name: Terraform Plan
      working-directory: ./infrastructure
      run: terraform plan -var="aws_region=${{ env.AWS_REGION }}" -var="project_name=${{ env.PROJECT_NAME }}" -var="cluster_name=${{ env.CLUSTER_NAME }}"

    - name: Terraform Apply
      working-directory: ./infrastructure
      run: terraform apply -auto-approve -var="aws_region=${{ env.AWS_REGION }}" -var="project_name=${{ env.PROJECT_NAME }}" -var="cluster_name=${{ env.CLUSTER_NAME }}"

    - name: Display Created Resources Summary
      run: |
        echo "Fetching created resources information..."
        aws eks describe-cluster --name ${{ env.CLUSTER_NAME }} --region ${{ env.AWS_REGION }}
        aws ec2 describe-vpcs --region ${{ env.AWS_REGION }} --filters "Name=tag:Name,Values=${{ env.PROJECT_NAME }}-vpc"
        aws elbv2 describe-load-balancers --region ${{ env.AWS_REGION }} --query "LoadBalancers[*].[LoadBalancerName,State.Code,Type,Scheme]"
      